{"ast":null,"code":"// This file is used to create a cenralized API. If the file is changed at one place, it will reflect in all other places\nimport axios from 'axios';\nimport { api } from '../urlConfig';\nimport store from '../store';\nimport { authConstants } from '../actions/constants';\nconst token = window.localStorage.getItem('token');\nconst axiosIntance = axios.create({\n  baseURL: api,\n  headers: {\n    'Authorization': token ? `Bearer ${token}` : ''\n  }\n});\naxiosIntance.interceptors.request.use(req => {\n  const {\n    auth\n  } = store.getState();\n\n  if (auth.token) {\n    req.headers.Authorization = `Bearer ${auth.token}`;\n  }\n\n  return req;\n});\naxiosIntance.interceptors.response.use(res => {\n  return res;\n}, error => {\n  console.log(error.response);\n  const status = error.response ? error.response.status : 500;\n\n  if (status && status === 500) {\n    localStorage.clear();\n    store.dispatch({\n      type: authConstants.LOGOUT_SUCCESS\n    });\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosIntance;","map":{"version":3,"sources":["/Users/nidhigupta/Desktop/Web-Project/NMN Apparel Store/Frontend/admin-app/src/helpers/axios.js"],"names":["axios","api","store","authConstants","token","window","localStorage","getItem","axiosIntance","create","baseURL","headers","interceptors","request","use","req","auth","getState","Authorization","response","res","error","console","log","status","clear","dispatch","type","LOGOUT_SUCCESS","Promise","reject"],"mappings":"AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AAEA,MAAMC,YAAY,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC9BC,EAAAA,OAAO,EAAET,GADqB;AAE9BU,EAAAA,OAAO,EAAE;AACL,qBAAiBP,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADxC;AAFqB,CAAb,CAArB;AAOAI,YAAY,CAACI,YAAb,CAA0BC,OAA1B,CAAkCC,GAAlC,CAAuCC,GAAD,IAAS;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAWd,KAAK,CAACe,QAAN,EAAjB;;AACA,MAAID,IAAI,CAACZ,KAAT,EAAgB;AACZW,IAAAA,GAAG,CAACJ,OAAJ,CAAYO,aAAZ,GAA6B,UAASF,IAAI,CAACZ,KAAM,EAAjD;AACH;;AACD,SAAOW,GAAP;AACH,CAND;AAQAP,YAAY,CAACI,YAAb,CAA0BO,QAA1B,CAAmCL,GAAnC,CAAwCM,GAAD,IAAS;AAC5C,SAAOA,GAAP;AACH,CAFD,EAEIC,KAAD,IAAW;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,QAAlB;AACA,QAAMK,MAAM,GAAGH,KAAK,CAACF,QAAN,GAAiBE,KAAK,CAACF,QAAN,CAAeK,MAAhC,GAAyC,GAAxD;;AACA,MAAIA,MAAM,IAAIA,MAAM,KAAK,GAAzB,EAA8B;AAC1BlB,IAAAA,YAAY,CAACmB,KAAb;AACAvB,IAAAA,KAAK,CAACwB,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAExB,aAAa,CAACyB;AAAtB,KAAf;AACH;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeT,KAAf,CAAP;AACH,CAVD;AAYA,eAAeb,YAAf","sourcesContent":["// This file is used to create a cenralized API. If the file is changed at one place, it will reflect in all other places\n\nimport axios from 'axios';\nimport { api } from '../urlConfig';\nimport store from '../store';\nimport { authConstants } from '../actions/constants';\n\nconst token = window.localStorage.getItem('token');\n\nconst axiosIntance = axios.create({\n    baseURL: api,\n    headers: {\n        'Authorization': token ? `Bearer ${token}` : ''\n    }\n});\n\naxiosIntance.interceptors.request.use((req) => {\n    const { auth } = store.getState();\n    if (auth.token) {\n        req.headers.Authorization = `Bearer ${auth.token}`;\n    }\n    return req;\n})\n\naxiosIntance.interceptors.response.use((res) => {\n    return res;\n}, (error) => {\n    console.log(error.response);\n    const status = error.response ? error.response.status : 500;\n    if (status && status === 500) {\n        localStorage.clear();\n        store.dispatch({ type: authConstants.LOGOUT_SUCCESS });\n    }\n    return Promise.reject(error);\n})\n\nexport default axiosIntance;"]},"metadata":{},"sourceType":"module"}